//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "ArtifactProperty", "Artifact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Artifact), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Property))]
[assembly: EdmRelationshipAttribute("Model1", "PublicationProperty", "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Publication), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Property))]
[assembly: EdmRelationshipAttribute("Model1", "ContentPublication", "Content", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Content), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Publication))]
[assembly: EdmRelationshipAttribute("Model1", "VisitorVisit", "Visitor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Schema.Diagrams.SecondCut.Visitor), "Visit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Visit), true)]
[assembly: EdmRelationshipAttribute("Model1", "VisitorArtifact", "Visitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Visitor), "Artifact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Artifact))]
[assembly: EdmRelationshipAttribute("Model1", "TaxonArtifact", "Taxon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Schema.Diagrams.SecondCut.Taxon), "Artifact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Schema.Diagrams.SecondCut.Artifact), true)]

#endregion

namespace Schema.Diagrams.SecondCut
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Taxon> Taxa
        {
            get
            {
                if ((_Taxa == null))
                {
                    _Taxa = base.CreateObjectSet<Taxon>("Taxa");
                }
                return _Taxa;
            }
        }
        private ObjectSet<Taxon> _Taxa;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Visitor> Visitors
        {
            get
            {
                if ((_Visitors == null))
                {
                    _Visitors = base.CreateObjectSet<Visitor>("Visitors");
                }
                return _Visitors;
            }
        }
        private ObjectSet<Visitor> _Visitors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Publication> Publications
        {
            get
            {
                if ((_Publications == null))
                {
                    _Publications = base.CreateObjectSet<Publication>("Publications");
                }
                return _Publications;
            }
        }
        private ObjectSet<Publication> _Publications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artifact> Artifacts
        {
            get
            {
                if ((_Artifacts == null))
                {
                    _Artifacts = base.CreateObjectSet<Artifact>("Artifacts");
                }
                return _Artifacts;
            }
        }
        private ObjectSet<Artifact> _Artifacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Visit> Visits
        {
            get
            {
                if ((_Visits == null))
                {
                    _Visits = base.CreateObjectSet<Visit>("Visits");
                }
                return _Visits;
            }
        }
        private ObjectSet<Visit> _Visits;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Taxa EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxa(Taxon taxon)
        {
            base.AddObject("Taxa", taxon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Visitors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisitors(Visitor visitor)
        {
            base.AddObject("Visitors", visitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Publications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublications(Publication publication)
        {
            base.AddObject("Publications", publication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Artifacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtifacts(Artifact artifact)
        {
            base.AddObject("Artifacts", artifact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Visits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisits(Visit visit)
        {
            base.AddObject("Visits", visit);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Artifact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artifact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artifact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="taxonId">Initial value of the TaxonId property.</param>
        public static Artifact CreateArtifact(global::System.String id, global::System.String taxonId)
        {
            Artifact artifact = new Artifact();
            artifact.Id = id;
            artifact.TaxonId = taxonId;
            return artifact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonId
        {
            get
            {
                return _TaxonId;
            }
            set
            {
                OnTaxonIdChanging(value);
                ReportPropertyChanging("TaxonId");
                _TaxonId = StructuralObject.SetValidValue(value, false, "TaxonId");
                ReportPropertyChanged("TaxonId");
                OnTaxonIdChanged();
            }
        }
        private global::System.String _TaxonId;
        partial void OnTaxonIdChanging(global::System.String value);
        partial void OnTaxonIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ArtifactProperty", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("Model1.ArtifactProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("Model1.ArtifactProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VisitorArtifact", "Visitor")]
        public EntityCollection<Visitor> Visitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visitor>("Model1.VisitorArtifact", "Visitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visitor>("Model1.VisitorArtifact", "Visitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TaxonArtifact", "Taxon")]
        public Taxon Taxon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxon>("Model1.TaxonArtifact", "Taxon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxon>("Model1.TaxonArtifact", "Taxon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Taxon> TaxonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Taxon>("Model1.TaxonArtifact", "Taxon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Taxon>("Model1.TaxonArtifact", "Taxon", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Content CreateContent(global::System.String id)
        {
            Content content = new Content();
            content.Id = id;
            return content;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ContentPublication", "Publication")]
        public EntityCollection<Publication> Publications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("Model1.ContentPublication", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("Model1.ContentPublication", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stringValue">Initial value of the StringValue property.</param>
        /// <param name="binaryValue">Initial value of the BinaryValue property.</param>
        /// <param name="booleanValue">Initial value of the BooleanValue property.</param>
        /// <param name="dateTimeValue">Initial value of the DateTimeValue property.</param>
        /// <param name="decimalValue">Initial value of the DecimalValue property.</param>
        /// <param name="floatingPointValue">Initial value of the FloatingPointValue property.</param>
        /// <param name="integerValue">Initial value of the IntegerValue property.</param>
        /// <param name="jsonValue">Initial value of the JsonValue property.</param>
        /// <param name="geoJSONValue">Initial value of the GeoJSONValue property.</param>
        public static Property CreateProperty(global::System.String id, global::System.String stringValue, global::System.Byte[] binaryValue, global::System.Boolean booleanValue, global::System.DateTime dateTimeValue, global::System.Decimal decimalValue, global::System.Double floatingPointValue, global::System.Int64 integerValue, global::System.String jsonValue, global::System.String geoJSONValue)
        {
            Property property = new Property();
            property.Id = id;
            property.StringValue = stringValue;
            property.BinaryValue = binaryValue;
            property.BooleanValue = booleanValue;
            property.DateTimeValue = dateTimeValue;
            property.DecimalValue = decimalValue;
            property.FloatingPointValue = floatingPointValue;
            property.IntegerValue = integerValue;
            property.JsonValue = jsonValue;
            property.GeoJSONValue = geoJSONValue;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StringValue
        {
            get
            {
                return _StringValue;
            }
            set
            {
                OnStringValueChanging(value);
                ReportPropertyChanging("StringValue");
                _StringValue = StructuralObject.SetValidValue(value, false, "StringValue");
                ReportPropertyChanged("StringValue");
                OnStringValueChanged();
            }
        }
        private global::System.String _StringValue;
        partial void OnStringValueChanging(global::System.String value);
        partial void OnStringValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] BinaryValue
        {
            get
            {
                return StructuralObject.GetValidValue(_BinaryValue);
            }
            set
            {
                OnBinaryValueChanging(value);
                ReportPropertyChanging("BinaryValue");
                _BinaryValue = StructuralObject.SetValidValue(value, false, "BinaryValue");
                ReportPropertyChanged("BinaryValue");
                OnBinaryValueChanged();
            }
        }
        private global::System.Byte[] _BinaryValue;
        partial void OnBinaryValueChanging(global::System.Byte[] value);
        partial void OnBinaryValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BooleanValue
        {
            get
            {
                return _BooleanValue;
            }
            set
            {
                OnBooleanValueChanging(value);
                ReportPropertyChanging("BooleanValue");
                _BooleanValue = StructuralObject.SetValidValue(value, "BooleanValue");
                ReportPropertyChanged("BooleanValue");
                OnBooleanValueChanged();
            }
        }
        private global::System.Boolean _BooleanValue;
        partial void OnBooleanValueChanging(global::System.Boolean value);
        partial void OnBooleanValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeValue
        {
            get
            {
                return _DateTimeValue;
            }
            set
            {
                OnDateTimeValueChanging(value);
                ReportPropertyChanging("DateTimeValue");
                _DateTimeValue = StructuralObject.SetValidValue(value, "DateTimeValue");
                ReportPropertyChanged("DateTimeValue");
                OnDateTimeValueChanged();
            }
        }
        private global::System.DateTime _DateTimeValue;
        partial void OnDateTimeValueChanging(global::System.DateTime value);
        partial void OnDateTimeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DecimalValue
        {
            get
            {
                return _DecimalValue;
            }
            set
            {
                OnDecimalValueChanging(value);
                ReportPropertyChanging("DecimalValue");
                _DecimalValue = StructuralObject.SetValidValue(value, "DecimalValue");
                ReportPropertyChanged("DecimalValue");
                OnDecimalValueChanged();
            }
        }
        private global::System.Decimal _DecimalValue;
        partial void OnDecimalValueChanging(global::System.Decimal value);
        partial void OnDecimalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FloatingPointValue
        {
            get
            {
                return _FloatingPointValue;
            }
            set
            {
                OnFloatingPointValueChanging(value);
                ReportPropertyChanging("FloatingPointValue");
                _FloatingPointValue = StructuralObject.SetValidValue(value, "FloatingPointValue");
                ReportPropertyChanged("FloatingPointValue");
                OnFloatingPointValueChanged();
            }
        }
        private global::System.Double _FloatingPointValue;
        partial void OnFloatingPointValueChanging(global::System.Double value);
        partial void OnFloatingPointValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IntegerValue
        {
            get
            {
                return _IntegerValue;
            }
            set
            {
                OnIntegerValueChanging(value);
                ReportPropertyChanging("IntegerValue");
                _IntegerValue = StructuralObject.SetValidValue(value, "IntegerValue");
                ReportPropertyChanged("IntegerValue");
                OnIntegerValueChanged();
            }
        }
        private global::System.Int64 _IntegerValue;
        partial void OnIntegerValueChanging(global::System.Int64 value);
        partial void OnIntegerValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JsonValue
        {
            get
            {
                return _JsonValue;
            }
            set
            {
                OnJsonValueChanging(value);
                ReportPropertyChanging("JsonValue");
                _JsonValue = StructuralObject.SetValidValue(value, false, "JsonValue");
                ReportPropertyChanged("JsonValue");
                OnJsonValueChanged();
            }
        }
        private global::System.String _JsonValue;
        partial void OnJsonValueChanging(global::System.String value);
        partial void OnJsonValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeoJSONValue
        {
            get
            {
                return _GeoJSONValue;
            }
            set
            {
                OnGeoJSONValueChanging(value);
                ReportPropertyChanging("GeoJSONValue");
                _GeoJSONValue = StructuralObject.SetValidValue(value, false, "GeoJSONValue");
                ReportPropertyChanged("GeoJSONValue");
                OnGeoJSONValueChanged();
            }
        }
        private global::System.String _GeoJSONValue;
        partial void OnGeoJSONValueChanging(global::System.String value);
        partial void OnGeoJSONValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ArtifactProperty", "Artifact")]
        public EntityCollection<Artifact> Artifacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artifact>("Model1.ArtifactProperty", "Artifact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artifact>("Model1.ArtifactProperty", "Artifact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "PublicationProperty", "Publication")]
        public EntityCollection<Publication> Publications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("Model1.PublicationProperty", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("Model1.PublicationProperty", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Publication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Publication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Publication CreatePublication(global::System.String id)
        {
            Publication publication = new Publication();
            publication.Id = id;
            return publication;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "PublicationProperty", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("Model1.PublicationProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("Model1.PublicationProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ContentPublication", "Content")]
        public EntityCollection<Content> Contents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Content>("Model1.ContentPublication", "Content");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Content>("Model1.ContentPublication", "Content", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Role CreateRole(global::System.Int32 id)
        {
            Role role = new Role();
            role.Id = id;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Taxon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Taxon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Taxon object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Taxon CreateTaxon(global::System.String id)
        {
            Taxon taxon = new Taxon();
            taxon.Id = id;
            return taxon;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TaxonArtifact", "Artifact")]
        public EntityCollection<Artifact> Artifacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artifact>("Model1.TaxonArtifact", "Artifact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artifact>("Model1.TaxonArtifact", "Artifact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Visit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Visit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Visit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Visit CreateVisit(global::System.String id)
        {
            Visit visit = new Visit();
            visit.Id = id;
            return visit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VisitorId
        {
            get
            {
                return _VisitorId;
            }
            set
            {
                OnVisitorIdChanging(value);
                ReportPropertyChanging("VisitorId");
                _VisitorId = StructuralObject.SetValidValue(value, true, "VisitorId");
                ReportPropertyChanged("VisitorId");
                OnVisitorIdChanged();
            }
        }
        private global::System.String _VisitorId;
        partial void OnVisitorIdChanging(global::System.String value);
        partial void OnVisitorIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VisitorVisit", "Visitor")]
        public Visitor Visitor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Visitor>("Model1.VisitorVisit", "Visitor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Visitor>("Model1.VisitorVisit", "Visitor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Visitor> VisitorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Visitor>("Model1.VisitorVisit", "Visitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Visitor>("Model1.VisitorVisit", "Visitor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Visitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Visitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Visitor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Visitor CreateVisitor(global::System.String id)
        {
            Visitor visitor = new Visitor();
            visitor.Id = id;
            return visitor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VisitorVisit", "Visit")]
        public EntityCollection<Visit> Visits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Visit>("Model1.VisitorVisit", "Visit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Visit>("Model1.VisitorVisit", "Visit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VisitorArtifact", "Artifact")]
        public EntityCollection<Artifact> Artifacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artifact>("Model1.VisitorArtifact", "Artifact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artifact>("Model1.VisitorArtifact", "Artifact", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
