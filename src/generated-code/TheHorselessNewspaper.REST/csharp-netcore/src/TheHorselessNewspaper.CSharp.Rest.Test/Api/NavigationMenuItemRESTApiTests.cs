/*
 * Horseless Content API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TheHorselessNewspaper.CSharp.Rest.Client;
using TheHorselessNewspaper.CSharp.Rest.Api;
// uncomment below to import models
//using TheHorselessNewspaper.CSharp.Rest.Model;

namespace TheHorselessNewspaper.CSharp.Rest.Test.Api
{
    /// <summary>
    ///  Class for testing NavigationMenuItemRESTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NavigationMenuItemRESTApiTests : IDisposable
    {
        private NavigationMenuItemRESTApi instance;

        public NavigationMenuItemRESTApiTests()
        {
            instance = new NavigationMenuItemRESTApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NavigationMenuItemRESTApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NavigationMenuItemRESTApi
            //Assert.IsType<NavigationMenuItemRESTApi>(instance);
        }

        /// <summary>
        /// Test NavigationMenuItemRESTControllerCreate
        /// </summary>
        [Fact]
        public void NavigationMenuItemRESTControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentEntitiesNavigationMenuItem? contentEntitiesNavigationMenuItem = null;
            //var response = instance.NavigationMenuItemRESTControllerCreate(contentEntitiesNavigationMenuItem);
            //Assert.IsType<ContentEntitiesNavigationMenuItem>(response);
        }

        /// <summary>
        /// Test NavigationMenuItemRESTControllerGetByObjectId
        /// </summary>
        [Fact]
        public void NavigationMenuItemRESTControllerGetByObjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //var response = instance.NavigationMenuItemRESTControllerGetByObjectId(objectId);
            //Assert.IsType<ContentEntitiesNavigationMenuItem>(response);
        }

        /// <summary>
        /// Test NavigationMenuItemRESTControllerUpdate
        /// </summary>
        [Fact]
        public void NavigationMenuItemRESTControllerUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentCollectionId = null;
            //ContentEntitiesNavigationMenuItem? contentEntitiesNavigationMenuItem = null;
            //var response = instance.NavigationMenuItemRESTControllerUpdate(contentCollectionId, contentEntitiesNavigationMenuItem);
            //Assert.IsType<ContentEntitiesNavigationMenuItem>(response);
        }
    }
}
