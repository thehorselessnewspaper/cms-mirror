/*
 * Horseless Content API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TheHorselessNewspaper.CSharp.Rest.Client;
using TheHorselessNewspaper.CSharp.Rest.Api;
// uncomment below to import models
//using TheHorselessNewspaper.CSharp.Rest.Model;

namespace TheHorselessNewspaper.CSharp.Rest.Test.Api
{
    /// <summary>
    ///  Class for testing HorselessViewRESTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class HorselessViewRESTApiTests : IDisposable
    {
        private HorselessViewRESTApi instance;

        public HorselessViewRESTApiTests()
        {
            instance = new HorselessViewRESTApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HorselessViewRESTApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' HorselessViewRESTApi
            //Assert.IsType<HorselessViewRESTApi>(instance);
        }

        /// <summary>
        /// Test ContentEntitiesHorselessViewRESTCreate
        /// </summary>
        [Fact]
        public void ContentEntitiesHorselessViewRESTCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenant = null;
            //ContentEntitiesHorselessView? contentEntitiesHorselessView = null;
            //var response = instance.ContentEntitiesHorselessViewRESTCreate(tenant, contentEntitiesHorselessView);
            //Assert.IsType<ContentEntitiesHorselessView>(response);
        }

        /// <summary>
        /// Test ContentEntitiesHorselessViewRESTGetByObjectId
        /// </summary>
        [Fact]
        public void ContentEntitiesHorselessViewRESTGetByObjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //string tenant = null;
            //var response = instance.ContentEntitiesHorselessViewRESTGetByObjectId(objectId, tenant);
            //Assert.IsType<ContentEntitiesHorselessView>(response);
        }

        /// <summary>
        /// Test ContentEntitiesHorselessViewRESTGetByPageNumber
        /// </summary>
        [Fact]
        public void ContentEntitiesHorselessViewRESTGetByPageNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tenant = null;
            //int? pageSize = null;
            //int? pageNumber = null;
            //int? pageCount = null;
            //var response = instance.ContentEntitiesHorselessViewRESTGetByPageNumber(tenant, pageSize, pageNumber, pageCount);
            //Assert.IsType<List<ContentEntitiesHorselessView>>(response);
        }

        /// <summary>
        /// Test ContentEntitiesHorselessViewRESTUpdate
        /// </summary>
        [Fact]
        public void ContentEntitiesHorselessViewRESTUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentCollectionId = null;
            //string tenant = null;
            //ContentEntitiesHorselessView? contentEntitiesHorselessView = null;
            //var response = instance.ContentEntitiesHorselessViewRESTUpdate(contentCollectionId, tenant, contentEntitiesHorselessView);
            //Assert.IsType<ContentEntitiesHorselessView>(response);
        }
    }
}
