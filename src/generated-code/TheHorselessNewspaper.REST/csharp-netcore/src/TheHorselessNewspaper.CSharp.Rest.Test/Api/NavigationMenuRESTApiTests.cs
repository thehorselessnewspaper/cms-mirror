/*
 * Horseless Content API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TheHorselessNewspaper.CSharp.Rest.Client;
using TheHorselessNewspaper.CSharp.Rest.Api;
// uncomment below to import models
//using TheHorselessNewspaper.CSharp.Rest.Model;

namespace TheHorselessNewspaper.CSharp.Rest.Test.Api
{
    /// <summary>
    ///  Class for testing NavigationMenuRESTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NavigationMenuRESTApiTests : IDisposable
    {
        private NavigationMenuRESTApi instance;

        public NavigationMenuRESTApiTests()
        {
            instance = new NavigationMenuRESTApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NavigationMenuRESTApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NavigationMenuRESTApi
            //Assert.IsType<NavigationMenuRESTApi>(instance);
        }

        /// <summary>
        /// Test NavigationMenuRESTControllerCreate
        /// </summary>
        [Fact]
        public void NavigationMenuRESTControllerCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContentEntitiesNavigationMenu? contentEntitiesNavigationMenu = null;
            //var response = instance.NavigationMenuRESTControllerCreate(contentEntitiesNavigationMenu);
            //Assert.IsType<ContentEntitiesMIMEType>(response);
        }

        /// <summary>
        /// Test NavigationMenuRESTControllerGetByObjectId
        /// </summary>
        [Fact]
        public void NavigationMenuRESTControllerGetByObjectIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string objectId = null;
            //var response = instance.NavigationMenuRESTControllerGetByObjectId(objectId);
            //Assert.IsType<ContentEntitiesMIMEType>(response);
        }

        /// <summary>
        /// Test NavigationMenuRESTControllerUpdate
        /// </summary>
        [Fact]
        public void NavigationMenuRESTControllerUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentCollectionId = null;
            //ContentEntitiesNavigationMenu? contentEntitiesNavigationMenu = null;
            //var response = instance.NavigationMenuRESTControllerUpdate(contentCollectionId, contentEntitiesNavigationMenu);
            //Assert.IsType<ContentEntitiesMIMEType>(response);
        }
    }
}
