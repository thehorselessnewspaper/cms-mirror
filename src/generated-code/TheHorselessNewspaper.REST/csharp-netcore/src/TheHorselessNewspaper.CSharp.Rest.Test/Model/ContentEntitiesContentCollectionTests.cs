/*
 * Horseless Content API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TheHorselessNewspaper.CSharp.Rest.Api;
using TheHorselessNewspaper.CSharp.Rest.Model;
using TheHorselessNewspaper.CSharp.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TheHorselessNewspaper.CSharp.Rest.Test.Model
{
    /// <summary>
    ///  Class for testing ContentEntitiesContentCollection
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContentEntitiesContentCollectionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ContentEntitiesContentCollection
        //private ContentEntitiesContentCollection instance;

        public ContentEntitiesContentCollectionTests()
        {
            // TODO uncomment below to create an instance of ContentEntitiesContentCollection
            //instance = new ContentEntitiesContentCollection();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ContentEntitiesContentCollection
        /// </summary>
        [Fact]
        public void ContentEntitiesContentCollectionInstanceTest()
        {
            // TODO uncomment below to test "IsType" ContentEntitiesContentCollection
            //Assert.IsType<ContentEntitiesContentCollection>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'ObjectId'
        /// </summary>
        [Fact]
        public void ObjectIdTest()
        {
            // TODO unit test for the property 'ObjectId'
        }
        /// <summary>
        /// Test the property 'IsSoftDeleted'
        /// </summary>
        [Fact]
        public void IsSoftDeletedTest()
        {
            // TODO unit test for the property 'IsSoftDeleted'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'AllowAnonymousRead'
        /// </summary>
        [Fact]
        public void AllowAnonymousReadTest()
        {
            // TODO unit test for the property 'AllowAnonymousRead'
        }
        /// <summary>
        /// Test the property 'IsPublished'
        /// </summary>
        [Fact]
        public void IsPublishedTest()
        {
            // TODO unit test for the property 'IsPublished'
        }
        /// <summary>
        /// Test the property 'PublishedURL'
        /// </summary>
        [Fact]
        public void PublishedURLTest()
        {
            // TODO unit test for the property 'PublishedURL'
        }
        /// <summary>
        /// Test the property 'PreviewURL'
        /// </summary>
        [Fact]
        public void PreviewURLTest()
        {
            // TODO unit test for the property 'PreviewURL'
        }
        /// <summary>
        /// Test the property 'ChildContentCollections'
        /// </summary>
        [Fact]
        public void ChildContentCollectionsTest()
        {
            // TODO unit test for the property 'ChildContentCollections'
        }
        /// <summary>
        /// Test the property 'MimeContents'
        /// </summary>
        [Fact]
        public void MimeContentsTest()
        {
            // TODO unit test for the property 'MimeContents'
        }
        /// <summary>
        /// Test the property 'ParentContentCollections'
        /// </summary>
        [Fact]
        public void ParentContentCollectionsTest()
        {
            // TODO unit test for the property 'ParentContentCollections'
        }
        /// <summary>
        /// Test the property 'Publications'
        /// </summary>
        [Fact]
        public void PublicationsTest()
        {
            // TODO unit test for the property 'Publications'
        }
        /// <summary>
        /// Test the property 'Taxonomies'
        /// </summary>
        [Fact]
        public void TaxonomiesTest()
        {
            // TODO unit test for the property 'Taxonomies'
        }
        /// <summary>
        /// Test the property 'Tenants'
        /// </summary>
        [Fact]
        public void TenantsTest()
        {
            // TODO unit test for the property 'Tenants'
        }
        /// <summary>
        /// Test the property 'AccessControlList'
        /// </summary>
        [Fact]
        public void AccessControlListTest()
        {
            // TODO unit test for the property 'AccessControlList'
        }
        /// <summary>
        /// Test the property 'Owners'
        /// </summary>
        [Fact]
        public void OwnersTest()
        {
            // TODO unit test for the property 'Owners'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }

    }

}
