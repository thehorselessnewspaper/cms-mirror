/*
 * Horseless Content API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TheHorselessNewspaper.CSharp.Rest.Api;
using TheHorselessNewspaper.CSharp.Rest.Model;
using TheHorselessNewspaper.CSharp.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TheHorselessNewspaper.CSharp.Rest.Test.Model
{
    /// <summary>
    ///  Class for testing VocabulariesIEdmVocabularyAnnotation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class VocabulariesIEdmVocabularyAnnotationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for VocabulariesIEdmVocabularyAnnotation
        //private VocabulariesIEdmVocabularyAnnotation instance;

        public VocabulariesIEdmVocabularyAnnotationTests()
        {
            // TODO uncomment below to create an instance of VocabulariesIEdmVocabularyAnnotation
            //instance = new VocabulariesIEdmVocabularyAnnotation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VocabulariesIEdmVocabularyAnnotation
        /// </summary>
        [Fact]
        public void VocabulariesIEdmVocabularyAnnotationInstanceTest()
        {
            // TODO uncomment below to test "IsType" VocabulariesIEdmVocabularyAnnotation
            //Assert.IsType<VocabulariesIEdmVocabularyAnnotation>(instance);
        }


        /// <summary>
        /// Test the property 'Qualifier'
        /// </summary>
        [Fact]
        public void QualifierTest()
        {
            // TODO unit test for the property 'Qualifier'
        }
        /// <summary>
        /// Test the property 'Term'
        /// </summary>
        [Fact]
        public void TermTest()
        {
            // TODO unit test for the property 'Term'
        }
        /// <summary>
        /// Test the property 'Target'
        /// </summary>
        [Fact]
        public void TargetTest()
        {
            // TODO unit test for the property 'Target'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Fact]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }

    }

}
