/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ScopeMappingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ScopeMappingsApiTests : IDisposable
    {
        private ScopeMappingsApi instance;

        public ScopeMappingsApiTests()
        {
            instance = new ScopeMappingsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScopeMappingsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ScopeMappingsApi
            //Assert.IsType<ScopeMappingsApi>(instance);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsClientsClientAvailableGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsClientsClientAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmClientScopesIdScopeMappingsClientsClientAvailableGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsClientsClientCompositeGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsClientsClientCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmClientScopesIdScopeMappingsClientsClientCompositeGet(realm, id, _client, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsClientsClientDelete
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsClientsClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientScopesIdScopeMappingsClientsClientDelete(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsClientsClientGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsClientsClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmClientScopesIdScopeMappingsClientsClientGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsClientsClientPost
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsClientsClientPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientScopesIdScopeMappingsClientsClientPost(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsRealmAvailableGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsRealmAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientScopesIdScopeMappingsRealmAvailableGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsRealmCompositeGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsRealmCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmClientScopesIdScopeMappingsRealmCompositeGet(realm, id, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsRealmDelete
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsRealmDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientScopesIdScopeMappingsRealmDelete(realm, id, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsRealmGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsRealmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientScopesIdScopeMappingsRealmGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdScopeMappingsRealmPost
        /// </summary>
        [Fact]
        public void RealmClientScopesIdScopeMappingsRealmPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientScopesIdScopeMappingsRealmPost(realm, id, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsClientsClientAvailableGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsClientsClientAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmClientsIdScopeMappingsClientsClientAvailableGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsClientsClientCompositeGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsClientsClientCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmClientsIdScopeMappingsClientsClientCompositeGet(realm, id, _client, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsClientsClientDelete
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsClientsClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdScopeMappingsClientsClientDelete(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsClientsClientGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsClientsClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmClientsIdScopeMappingsClientsClientGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsClientsClientPost
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsClientsClientPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdScopeMappingsClientsClientPost(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsRealmAvailableGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsRealmAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientsIdScopeMappingsRealmAvailableGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsRealmCompositeGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsRealmCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmClientsIdScopeMappingsRealmCompositeGet(realm, id, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsRealmDelete
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsRealmDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdScopeMappingsRealmDelete(realm, id, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsRealmGet
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsRealmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientsIdScopeMappingsRealmGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdScopeMappingsRealmPost
        /// </summary>
        [Fact]
        public void RealmClientsIdScopeMappingsRealmPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdScopeMappingsRealmPost(realm, id, roleRepresentation);
        }
    }
}
