/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ClientRoleMappingsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClientRoleMappingsApiTests : IDisposable
    {
        private ClientRoleMappingsApi instance;

        public ClientRoleMappingsApiTests()
        {
            instance = new ClientRoleMappingsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientRoleMappingsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ClientRoleMappingsApi
            //Assert.IsType<ClientRoleMappingsApi>(instance);
        }

        /// <summary>
        /// Test RealmGroupsIdRoleMappingsClientsClientAvailableGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdRoleMappingsClientsClientAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmGroupsIdRoleMappingsClientsClientAvailableGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdRoleMappingsClientsClientCompositeGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdRoleMappingsClientsClientCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmGroupsIdRoleMappingsClientsClientCompositeGet(realm, id, _client, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdRoleMappingsClientsClientDelete
        /// </summary>
        [Fact]
        public void RealmGroupsIdRoleMappingsClientsClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmGroupsIdRoleMappingsClientsClientDelete(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmGroupsIdRoleMappingsClientsClientGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdRoleMappingsClientsClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmGroupsIdRoleMappingsClientsClientGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdRoleMappingsClientsClientPost
        /// </summary>
        [Fact]
        public void RealmGroupsIdRoleMappingsClientsClientPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmGroupsIdRoleMappingsClientsClientPost(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmUsersIdRoleMappingsClientsClientAvailableGet
        /// </summary>
        [Fact]
        public void RealmUsersIdRoleMappingsClientsClientAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmUsersIdRoleMappingsClientsClientAvailableGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmUsersIdRoleMappingsClientsClientCompositeGet
        /// </summary>
        [Fact]
        public void RealmUsersIdRoleMappingsClientsClientCompositeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //bool? briefRepresentation = null;
            //var response = instance.RealmUsersIdRoleMappingsClientsClientCompositeGet(realm, id, _client, briefRepresentation);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmUsersIdRoleMappingsClientsClientDelete
        /// </summary>
        [Fact]
        public void RealmUsersIdRoleMappingsClientsClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmUsersIdRoleMappingsClientsClientDelete(realm, id, _client, roleRepresentation);
        }

        /// <summary>
        /// Test RealmUsersIdRoleMappingsClientsClientGet
        /// </summary>
        [Fact]
        public void RealmUsersIdRoleMappingsClientsClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //var response = instance.RealmUsersIdRoleMappingsClientsClientGet(realm, id, _client);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmUsersIdRoleMappingsClientsClientPost
        /// </summary>
        [Fact]
        public void RealmUsersIdRoleMappingsClientsClientPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string _client = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmUsersIdRoleMappingsClientsClientPost(realm, id, _client, roleRepresentation);
        }
    }
}
