/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing RolesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RolesApiTests : IDisposable
    {
        private RolesApi instance;

        public RolesApiTests()
        {
            instance = new RolesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RolesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RolesApi
            //Assert.IsType<RolesApi>(instance);
        }

        /// <summary>
        /// Test RealmClientsIdRolesGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //string search = null;
            //var response = instance.RealmClientsIdRolesGet(realm, id, briefRepresentation, first, max, search);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesPost
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //RoleRepresentation roleRepresentation = null;
            //instance.RealmClientsIdRolesPost(realm, id, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameCompositesClientsClientUuidGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameCompositesClientsClientUuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //string clientUuid = null;
            //var response = instance.RealmClientsIdRolesRoleNameCompositesClientsClientUuidGet(realm, id, roleName, clientUuid);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameCompositesDelete
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameCompositesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdRolesRoleNameCompositesDelete(realm, id, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameCompositesGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameCompositesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //var response = instance.RealmClientsIdRolesRoleNameCompositesGet(realm, id, roleName);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameCompositesPost
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameCompositesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmClientsIdRolesRoleNameCompositesPost(realm, id, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameCompositesRealmGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameCompositesRealmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //var response = instance.RealmClientsIdRolesRoleNameCompositesRealmGet(realm, id, roleName);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameDelete
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //instance.RealmClientsIdRolesRoleNameDelete(realm, id, roleName);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //var response = instance.RealmClientsIdRolesRoleNameGet(realm, id, roleName);
            //Assert.IsType<RoleRepresentation>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameGroupsGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //var response = instance.RealmClientsIdRolesRoleNameGroupsGet(realm, id, roleName, briefRepresentation, first, max);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameManagementPermissionsGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameManagementPermissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //var response = instance.RealmClientsIdRolesRoleNameManagementPermissionsGet(realm, id, roleName);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameManagementPermissionsPut
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameManagementPermissionsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //ManagementPermissionReference managementPermissionReference = null;
            //var response = instance.RealmClientsIdRolesRoleNameManagementPermissionsPut(realm, id, roleName, managementPermissionReference);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNamePut
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //RoleRepresentation roleRepresentation = null;
            //instance.RealmClientsIdRolesRoleNamePut(realm, id, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdRolesRoleNameUsersGet
        /// </summary>
        [Fact]
        public void RealmClientsIdRolesRoleNameUsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string roleName = null;
            //int? first = null;
            //int? max = null;
            //var response = instance.RealmClientsIdRolesRoleNameUsersGet(realm, id, roleName, first, max);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesGet
        /// </summary>
        [Fact]
        public void RealmRolesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //string search = null;
            //var response = instance.RealmRolesGet(realm, briefRepresentation, first, max, search);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesPost
        /// </summary>
        [Fact]
        public void RealmRolesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //RoleRepresentation roleRepresentation = null;
            //instance.RealmRolesPost(realm, roleRepresentation);
        }

        /// <summary>
        /// Test RealmRolesRoleNameCompositesClientsClientUuidGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameCompositesClientsClientUuidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //string clientUuid = null;
            //var response = instance.RealmRolesRoleNameCompositesClientsClientUuidGet(realm, roleName, clientUuid);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameCompositesDelete
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameCompositesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmRolesRoleNameCompositesDelete(realm, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmRolesRoleNameCompositesGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameCompositesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //var response = instance.RealmRolesRoleNameCompositesGet(realm, roleName);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameCompositesPost
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameCompositesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //List<RoleRepresentation> roleRepresentation = null;
            //instance.RealmRolesRoleNameCompositesPost(realm, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmRolesRoleNameCompositesRealmGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameCompositesRealmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //var response = instance.RealmRolesRoleNameCompositesRealmGet(realm, roleName);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameDelete
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //instance.RealmRolesRoleNameDelete(realm, roleName);
        }

        /// <summary>
        /// Test RealmRolesRoleNameGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //var response = instance.RealmRolesRoleNameGet(realm, roleName);
            //Assert.IsType<RoleRepresentation>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameGroupsGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //var response = instance.RealmRolesRoleNameGroupsGet(realm, roleName, briefRepresentation, first, max);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameManagementPermissionsGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameManagementPermissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //var response = instance.RealmRolesRoleNameManagementPermissionsGet(realm, roleName);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNameManagementPermissionsPut
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameManagementPermissionsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //ManagementPermissionReference managementPermissionReference = null;
            //var response = instance.RealmRolesRoleNameManagementPermissionsPut(realm, roleName, managementPermissionReference);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmRolesRoleNamePut
        /// </summary>
        [Fact]
        public void RealmRolesRoleNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //RoleRepresentation roleRepresentation = null;
            //instance.RealmRolesRoleNamePut(realm, roleName, roleRepresentation);
        }

        /// <summary>
        /// Test RealmRolesRoleNameUsersGet
        /// </summary>
        [Fact]
        public void RealmRolesRoleNameUsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string roleName = null;
            //int? first = null;
            //int? max = null;
            //var response = instance.RealmRolesRoleNameUsersGet(realm, roleName, first, max);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }
    }
}
