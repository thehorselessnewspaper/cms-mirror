/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing RoleRepresentation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RoleRepresentationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RoleRepresentation
        //private RoleRepresentation instance;

        public RoleRepresentationTests()
        {
            // TODO uncomment below to create an instance of RoleRepresentation
            //instance = new RoleRepresentation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RoleRepresentation
        /// </summary>
        [Fact]
        public void RoleRepresentationInstanceTest()
        {
            // TODO uncomment below to test "IsType" RoleRepresentation
            //Assert.IsType<RoleRepresentation>(instance);
        }


        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'ClientRole'
        /// </summary>
        [Fact]
        public void ClientRoleTest()
        {
            // TODO unit test for the property 'ClientRole'
        }
        /// <summary>
        /// Test the property 'Composite'
        /// </summary>
        [Fact]
        public void CompositeTest()
        {
            // TODO unit test for the property 'Composite'
        }
        /// <summary>
        /// Test the property 'Composites'
        /// </summary>
        [Fact]
        public void CompositesTest()
        {
            // TODO unit test for the property 'Composites'
        }
        /// <summary>
        /// Test the property 'ContainerId'
        /// </summary>
        [Fact]
        public void ContainerIdTest()
        {
            // TODO unit test for the property 'ContainerId'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
