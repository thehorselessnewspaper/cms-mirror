/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Horseless.Keycloak.Admin.Rest.Client;
using Horseless.Keycloak.Admin.Rest.Api;
// uncomment below to import models
//using Horseless.Keycloak.Admin.Rest.Model;

namespace Horseless.Keycloak.Admin.Rest.Test.Api
{
    /// <summary>
    ///  Class for testing ProtocolMappersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProtocolMappersApiTests : IDisposable
    {
        private ProtocolMappersApi instance;

        public ProtocolMappersApiTests()
        {
            instance = new ProtocolMappersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProtocolMappersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProtocolMappersApi
            //Assert.IsType<ProtocolMappersApi>(instance);
        }

        /// <summary>
        /// Test RealmClientScopesId1ProtocolMappersModelsId2Delete
        /// </summary>
        [Fact]
        public void RealmClientScopesId1ProtocolMappersModelsId2DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //instance.RealmClientScopesId1ProtocolMappersModelsId2Delete(realm, id1, id2);
        }

        /// <summary>
        /// Test RealmClientScopesId1ProtocolMappersModelsId2Get
        /// </summary>
        [Fact]
        public void RealmClientScopesId1ProtocolMappersModelsId2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //var response = instance.RealmClientScopesId1ProtocolMappersModelsId2Get(realm, id1, id2);
            //Assert.IsType<ProtocolMapperRepresentation>(response);
        }

        /// <summary>
        /// Test RealmClientScopesId1ProtocolMappersModelsId2Put
        /// </summary>
        [Fact]
        public void RealmClientScopesId1ProtocolMappersModelsId2PutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //ProtocolMapperRepresentation protocolMapperRepresentation = null;
            //instance.RealmClientScopesId1ProtocolMappersModelsId2Put(realm, id1, id2, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdProtocolMappersAddModelsPost
        /// </summary>
        [Fact]
        public void RealmClientScopesIdProtocolMappersAddModelsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<ProtocolMapperRepresentation> protocolMapperRepresentation = null;
            //instance.RealmClientScopesIdProtocolMappersAddModelsPost(realm, id, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdProtocolMappersModelsGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdProtocolMappersModelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientScopesIdProtocolMappersModelsGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientScopesIdProtocolMappersModelsPost
        /// </summary>
        [Fact]
        public void RealmClientScopesIdProtocolMappersModelsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //ProtocolMapperRepresentation protocolMapperRepresentation = null;
            //instance.RealmClientScopesIdProtocolMappersModelsPost(realm, id, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientScopesIdProtocolMappersProtocolProtocolGet
        /// </summary>
        [Fact]
        public void RealmClientScopesIdProtocolMappersProtocolProtocolGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string protocol = null;
            //var response = instance.RealmClientScopesIdProtocolMappersProtocolProtocolGet(realm, id, protocol);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsId1ProtocolMappersModelsId2Delete
        /// </summary>
        [Fact]
        public void RealmClientsId1ProtocolMappersModelsId2DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //instance.RealmClientsId1ProtocolMappersModelsId2Delete(realm, id1, id2);
        }

        /// <summary>
        /// Test RealmClientsId1ProtocolMappersModelsId2Get
        /// </summary>
        [Fact]
        public void RealmClientsId1ProtocolMappersModelsId2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //var response = instance.RealmClientsId1ProtocolMappersModelsId2Get(realm, id1, id2);
            //Assert.IsType<ProtocolMapperRepresentation>(response);
        }

        /// <summary>
        /// Test RealmClientsId1ProtocolMappersModelsId2Put
        /// </summary>
        [Fact]
        public void RealmClientsId1ProtocolMappersModelsId2PutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id1 = null;
            //string id2 = null;
            //ProtocolMapperRepresentation protocolMapperRepresentation = null;
            //instance.RealmClientsId1ProtocolMappersModelsId2Put(realm, id1, id2, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdProtocolMappersAddModelsPost
        /// </summary>
        [Fact]
        public void RealmClientsIdProtocolMappersAddModelsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //List<ProtocolMapperRepresentation> protocolMapperRepresentation = null;
            //instance.RealmClientsIdProtocolMappersAddModelsPost(realm, id, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdProtocolMappersModelsGet
        /// </summary>
        [Fact]
        public void RealmClientsIdProtocolMappersModelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmClientsIdProtocolMappersModelsGet(realm, id);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmClientsIdProtocolMappersModelsPost
        /// </summary>
        [Fact]
        public void RealmClientsIdProtocolMappersModelsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //ProtocolMapperRepresentation protocolMapperRepresentation = null;
            //instance.RealmClientsIdProtocolMappersModelsPost(realm, id, protocolMapperRepresentation);
        }

        /// <summary>
        /// Test RealmClientsIdProtocolMappersProtocolProtocolGet
        /// </summary>
        [Fact]
        public void RealmClientsIdProtocolMappersProtocolProtocolGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //string protocol = null;
            //var response = instance.RealmClientsIdProtocolMappersProtocolProtocolGet(realm, id, protocol);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }
    }
}
