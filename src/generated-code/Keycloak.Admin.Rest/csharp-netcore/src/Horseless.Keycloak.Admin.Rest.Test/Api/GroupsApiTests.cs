/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Horseless.Keycloak.Admin.Rest.Client;
using Horseless.Keycloak.Admin.Rest.Api;
// uncomment below to import models
//using Horseless.Keycloak.Admin.Rest.Model;

namespace Horseless.Keycloak.Admin.Rest.Test.Api
{
    /// <summary>
    ///  Class for testing GroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GroupsApiTests : IDisposable
    {
        private GroupsApi instance;

        public GroupsApiTests()
        {
            instance = new GroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GroupsApi
            //Assert.IsType<GroupsApi>(instance);
        }

        /// <summary>
        /// Test RealmGroupsCountGet
        /// </summary>
        [Fact]
        public void RealmGroupsCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string search = null;
            //bool? top = null;
            //var response = instance.RealmGroupsCountGet(realm, search, top);
            //Assert.IsType<Dictionary<string, Object>>(response);
        }

        /// <summary>
        /// Test RealmGroupsGet
        /// </summary>
        [Fact]
        public void RealmGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //string search = null;
            //var response = instance.RealmGroupsGet(realm, briefRepresentation, first, max, search);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdChildrenPost
        /// </summary>
        [Fact]
        public void RealmGroupsIdChildrenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //GroupRepresentation groupRepresentation = null;
            //instance.RealmGroupsIdChildrenPost(realm, id, groupRepresentation);
        }

        /// <summary>
        /// Test RealmGroupsIdDelete
        /// </summary>
        [Fact]
        public void RealmGroupsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //instance.RealmGroupsIdDelete(realm, id);
        }

        /// <summary>
        /// Test RealmGroupsIdGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmGroupsIdGet(realm, id);
            //Assert.IsType<GroupRepresentation>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdManagementPermissionsGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdManagementPermissionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //var response = instance.RealmGroupsIdManagementPermissionsGet(realm, id);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdManagementPermissionsPut
        /// </summary>
        [Fact]
        public void RealmGroupsIdManagementPermissionsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //ManagementPermissionReference managementPermissionReference = null;
            //var response = instance.RealmGroupsIdManagementPermissionsPut(realm, id, managementPermissionReference);
            //Assert.IsType<ManagementPermissionReference>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdMembersGet
        /// </summary>
        [Fact]
        public void RealmGroupsIdMembersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //bool? briefRepresentation = null;
            //int? first = null;
            //int? max = null;
            //var response = instance.RealmGroupsIdMembersGet(realm, id, briefRepresentation, first, max);
            //Assert.IsType<List<Dictionary<string, Object>>>(response);
        }

        /// <summary>
        /// Test RealmGroupsIdPut
        /// </summary>
        [Fact]
        public void RealmGroupsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //string id = null;
            //GroupRepresentation groupRepresentation = null;
            //instance.RealmGroupsIdPut(realm, id, groupRepresentation);
        }

        /// <summary>
        /// Test RealmGroupsPost
        /// </summary>
        [Fact]
        public void RealmGroupsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string realm = null;
            //GroupRepresentation groupRepresentation = null;
            //instance.RealmGroupsPost(realm, groupRepresentation);
        }
    }
}
