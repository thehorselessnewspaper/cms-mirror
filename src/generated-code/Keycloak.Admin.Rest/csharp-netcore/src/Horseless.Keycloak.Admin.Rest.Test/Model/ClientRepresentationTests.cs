/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Horseless.Keycloak.Admin.Rest.Api;
using Horseless.Keycloak.Admin.Rest.Model;
using Horseless.Keycloak.Admin.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Horseless.Keycloak.Admin.Rest.Test.Model
{
    /// <summary>
    ///  Class for testing ClientRepresentation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClientRepresentationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClientRepresentation
        //private ClientRepresentation instance;

        public ClientRepresentationTests()
        {
            // TODO uncomment below to create an instance of ClientRepresentation
            //instance = new ClientRepresentation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientRepresentation
        /// </summary>
        [Fact]
        public void ClientRepresentationInstanceTest()
        {
            // TODO uncomment below to test "IsType" ClientRepresentation
            //Assert.IsType<ClientRepresentation>(instance);
        }


        /// <summary>
        /// Test the property 'Access'
        /// </summary>
        [Fact]
        public void AccessTest()
        {
            // TODO unit test for the property 'Access'
        }
        /// <summary>
        /// Test the property 'AdminUrl'
        /// </summary>
        [Fact]
        public void AdminUrlTest()
        {
            // TODO unit test for the property 'AdminUrl'
        }
        /// <summary>
        /// Test the property 'AlwaysDisplayInConsole'
        /// </summary>
        [Fact]
        public void AlwaysDisplayInConsoleTest()
        {
            // TODO unit test for the property 'AlwaysDisplayInConsole'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'AuthenticationFlowBindingOverrides'
        /// </summary>
        [Fact]
        public void AuthenticationFlowBindingOverridesTest()
        {
            // TODO unit test for the property 'AuthenticationFlowBindingOverrides'
        }
        /// <summary>
        /// Test the property 'AuthorizationServicesEnabled'
        /// </summary>
        [Fact]
        public void AuthorizationServicesEnabledTest()
        {
            // TODO unit test for the property 'AuthorizationServicesEnabled'
        }
        /// <summary>
        /// Test the property 'AuthorizationSettings'
        /// </summary>
        [Fact]
        public void AuthorizationSettingsTest()
        {
            // TODO unit test for the property 'AuthorizationSettings'
        }
        /// <summary>
        /// Test the property 'BaseUrl'
        /// </summary>
        [Fact]
        public void BaseUrlTest()
        {
            // TODO unit test for the property 'BaseUrl'
        }
        /// <summary>
        /// Test the property 'BearerOnly'
        /// </summary>
        [Fact]
        public void BearerOnlyTest()
        {
            // TODO unit test for the property 'BearerOnly'
        }
        /// <summary>
        /// Test the property 'ClientAuthenticatorType'
        /// </summary>
        [Fact]
        public void ClientAuthenticatorTypeTest()
        {
            // TODO unit test for the property 'ClientAuthenticatorType'
        }
        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }
        /// <summary>
        /// Test the property 'ConsentRequired'
        /// </summary>
        [Fact]
        public void ConsentRequiredTest()
        {
            // TODO unit test for the property 'ConsentRequired'
        }
        /// <summary>
        /// Test the property 'DefaultClientScopes'
        /// </summary>
        [Fact]
        public void DefaultClientScopesTest()
        {
            // TODO unit test for the property 'DefaultClientScopes'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'DirectAccessGrantsEnabled'
        /// </summary>
        [Fact]
        public void DirectAccessGrantsEnabledTest()
        {
            // TODO unit test for the property 'DirectAccessGrantsEnabled'
        }
        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'FrontchannelLogout'
        /// </summary>
        [Fact]
        public void FrontchannelLogoutTest()
        {
            // TODO unit test for the property 'FrontchannelLogout'
        }
        /// <summary>
        /// Test the property 'FullScopeAllowed'
        /// </summary>
        [Fact]
        public void FullScopeAllowedTest()
        {
            // TODO unit test for the property 'FullScopeAllowed'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ImplicitFlowEnabled'
        /// </summary>
        [Fact]
        public void ImplicitFlowEnabledTest()
        {
            // TODO unit test for the property 'ImplicitFlowEnabled'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'NodeReRegistrationTimeout'
        /// </summary>
        [Fact]
        public void NodeReRegistrationTimeoutTest()
        {
            // TODO unit test for the property 'NodeReRegistrationTimeout'
        }
        /// <summary>
        /// Test the property 'NotBefore'
        /// </summary>
        [Fact]
        public void NotBeforeTest()
        {
            // TODO unit test for the property 'NotBefore'
        }
        /// <summary>
        /// Test the property 'Oauth2DeviceAuthorizationGrantEnabled'
        /// </summary>
        [Fact]
        public void Oauth2DeviceAuthorizationGrantEnabledTest()
        {
            // TODO unit test for the property 'Oauth2DeviceAuthorizationGrantEnabled'
        }
        /// <summary>
        /// Test the property 'OptionalClientScopes'
        /// </summary>
        [Fact]
        public void OptionalClientScopesTest()
        {
            // TODO unit test for the property 'OptionalClientScopes'
        }
        /// <summary>
        /// Test the property 'Origin'
        /// </summary>
        [Fact]
        public void OriginTest()
        {
            // TODO unit test for the property 'Origin'
        }
        /// <summary>
        /// Test the property 'Protocol'
        /// </summary>
        [Fact]
        public void ProtocolTest()
        {
            // TODO unit test for the property 'Protocol'
        }
        /// <summary>
        /// Test the property 'ProtocolMappers'
        /// </summary>
        [Fact]
        public void ProtocolMappersTest()
        {
            // TODO unit test for the property 'ProtocolMappers'
        }
        /// <summary>
        /// Test the property 'PublicClient'
        /// </summary>
        [Fact]
        public void PublicClientTest()
        {
            // TODO unit test for the property 'PublicClient'
        }
        /// <summary>
        /// Test the property 'RedirectUris'
        /// </summary>
        [Fact]
        public void RedirectUrisTest()
        {
            // TODO unit test for the property 'RedirectUris'
        }
        /// <summary>
        /// Test the property 'RegisteredNodes'
        /// </summary>
        [Fact]
        public void RegisteredNodesTest()
        {
            // TODO unit test for the property 'RegisteredNodes'
        }
        /// <summary>
        /// Test the property 'RegistrationAccessToken'
        /// </summary>
        [Fact]
        public void RegistrationAccessTokenTest()
        {
            // TODO unit test for the property 'RegistrationAccessToken'
        }
        /// <summary>
        /// Test the property 'RootUrl'
        /// </summary>
        [Fact]
        public void RootUrlTest()
        {
            // TODO unit test for the property 'RootUrl'
        }
        /// <summary>
        /// Test the property 'Secret'
        /// </summary>
        [Fact]
        public void SecretTest()
        {
            // TODO unit test for the property 'Secret'
        }
        /// <summary>
        /// Test the property 'ServiceAccountsEnabled'
        /// </summary>
        [Fact]
        public void ServiceAccountsEnabledTest()
        {
            // TODO unit test for the property 'ServiceAccountsEnabled'
        }
        /// <summary>
        /// Test the property 'StandardFlowEnabled'
        /// </summary>
        [Fact]
        public void StandardFlowEnabledTest()
        {
            // TODO unit test for the property 'StandardFlowEnabled'
        }
        /// <summary>
        /// Test the property 'SurrogateAuthRequired'
        /// </summary>
        [Fact]
        public void SurrogateAuthRequiredTest()
        {
            // TODO unit test for the property 'SurrogateAuthRequired'
        }
        /// <summary>
        /// Test the property 'WebOrigins'
        /// </summary>
        [Fact]
        public void WebOriginsTest()
        {
            // TODO unit test for the property 'WebOrigins'
        }

    }

}
