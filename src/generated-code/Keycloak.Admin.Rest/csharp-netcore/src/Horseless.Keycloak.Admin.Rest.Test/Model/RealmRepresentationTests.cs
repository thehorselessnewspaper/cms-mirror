/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Horseless.Keycloak.Admin.Rest.Api;
using Horseless.Keycloak.Admin.Rest.Model;
using Horseless.Keycloak.Admin.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Horseless.Keycloak.Admin.Rest.Test.Model
{
    /// <summary>
    ///  Class for testing RealmRepresentation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RealmRepresentationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RealmRepresentation
        //private RealmRepresentation instance;

        public RealmRepresentationTests()
        {
            // TODO uncomment below to create an instance of RealmRepresentation
            //instance = new RealmRepresentation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RealmRepresentation
        /// </summary>
        [Fact]
        public void RealmRepresentationInstanceTest()
        {
            // TODO uncomment below to test "IsType" RealmRepresentation
            //Assert.IsType<RealmRepresentation>(instance);
        }


        /// <summary>
        /// Test the property 'AccessCodeLifespan'
        /// </summary>
        [Fact]
        public void AccessCodeLifespanTest()
        {
            // TODO unit test for the property 'AccessCodeLifespan'
        }
        /// <summary>
        /// Test the property 'AccessCodeLifespanLogin'
        /// </summary>
        [Fact]
        public void AccessCodeLifespanLoginTest()
        {
            // TODO unit test for the property 'AccessCodeLifespanLogin'
        }
        /// <summary>
        /// Test the property 'AccessCodeLifespanUserAction'
        /// </summary>
        [Fact]
        public void AccessCodeLifespanUserActionTest()
        {
            // TODO unit test for the property 'AccessCodeLifespanUserAction'
        }
        /// <summary>
        /// Test the property 'AccessTokenLifespan'
        /// </summary>
        [Fact]
        public void AccessTokenLifespanTest()
        {
            // TODO unit test for the property 'AccessTokenLifespan'
        }
        /// <summary>
        /// Test the property 'AccessTokenLifespanForImplicitFlow'
        /// </summary>
        [Fact]
        public void AccessTokenLifespanForImplicitFlowTest()
        {
            // TODO unit test for the property 'AccessTokenLifespanForImplicitFlow'
        }
        /// <summary>
        /// Test the property 'AccountTheme'
        /// </summary>
        [Fact]
        public void AccountThemeTest()
        {
            // TODO unit test for the property 'AccountTheme'
        }
        /// <summary>
        /// Test the property 'ActionTokenGeneratedByAdminLifespan'
        /// </summary>
        [Fact]
        public void ActionTokenGeneratedByAdminLifespanTest()
        {
            // TODO unit test for the property 'ActionTokenGeneratedByAdminLifespan'
        }
        /// <summary>
        /// Test the property 'ActionTokenGeneratedByUserLifespan'
        /// </summary>
        [Fact]
        public void ActionTokenGeneratedByUserLifespanTest()
        {
            // TODO unit test for the property 'ActionTokenGeneratedByUserLifespan'
        }
        /// <summary>
        /// Test the property 'AdminEventsDetailsEnabled'
        /// </summary>
        [Fact]
        public void AdminEventsDetailsEnabledTest()
        {
            // TODO unit test for the property 'AdminEventsDetailsEnabled'
        }
        /// <summary>
        /// Test the property 'AdminEventsEnabled'
        /// </summary>
        [Fact]
        public void AdminEventsEnabledTest()
        {
            // TODO unit test for the property 'AdminEventsEnabled'
        }
        /// <summary>
        /// Test the property 'AdminTheme'
        /// </summary>
        [Fact]
        public void AdminThemeTest()
        {
            // TODO unit test for the property 'AdminTheme'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'AuthenticationFlows'
        /// </summary>
        [Fact]
        public void AuthenticationFlowsTest()
        {
            // TODO unit test for the property 'AuthenticationFlows'
        }
        /// <summary>
        /// Test the property 'AuthenticatorConfig'
        /// </summary>
        [Fact]
        public void AuthenticatorConfigTest()
        {
            // TODO unit test for the property 'AuthenticatorConfig'
        }
        /// <summary>
        /// Test the property 'BrowserFlow'
        /// </summary>
        [Fact]
        public void BrowserFlowTest()
        {
            // TODO unit test for the property 'BrowserFlow'
        }
        /// <summary>
        /// Test the property 'BrowserSecurityHeaders'
        /// </summary>
        [Fact]
        public void BrowserSecurityHeadersTest()
        {
            // TODO unit test for the property 'BrowserSecurityHeaders'
        }
        /// <summary>
        /// Test the property 'BruteForceProtected'
        /// </summary>
        [Fact]
        public void BruteForceProtectedTest()
        {
            // TODO unit test for the property 'BruteForceProtected'
        }
        /// <summary>
        /// Test the property 'ClientAuthenticationFlow'
        /// </summary>
        [Fact]
        public void ClientAuthenticationFlowTest()
        {
            // TODO unit test for the property 'ClientAuthenticationFlow'
        }
        /// <summary>
        /// Test the property 'ClientOfflineSessionIdleTimeout'
        /// </summary>
        [Fact]
        public void ClientOfflineSessionIdleTimeoutTest()
        {
            // TODO unit test for the property 'ClientOfflineSessionIdleTimeout'
        }
        /// <summary>
        /// Test the property 'ClientOfflineSessionMaxLifespan'
        /// </summary>
        [Fact]
        public void ClientOfflineSessionMaxLifespanTest()
        {
            // TODO unit test for the property 'ClientOfflineSessionMaxLifespan'
        }
        /// <summary>
        /// Test the property 'ClientPolicies'
        /// </summary>
        [Fact]
        public void ClientPoliciesTest()
        {
            // TODO unit test for the property 'ClientPolicies'
        }
        /// <summary>
        /// Test the property 'ClientProfiles'
        /// </summary>
        [Fact]
        public void ClientProfilesTest()
        {
            // TODO unit test for the property 'ClientProfiles'
        }
        /// <summary>
        /// Test the property 'ClientScopeMappings'
        /// </summary>
        [Fact]
        public void ClientScopeMappingsTest()
        {
            // TODO unit test for the property 'ClientScopeMappings'
        }
        /// <summary>
        /// Test the property 'ClientScopes'
        /// </summary>
        [Fact]
        public void ClientScopesTest()
        {
            // TODO unit test for the property 'ClientScopes'
        }
        /// <summary>
        /// Test the property 'ClientSessionIdleTimeout'
        /// </summary>
        [Fact]
        public void ClientSessionIdleTimeoutTest()
        {
            // TODO unit test for the property 'ClientSessionIdleTimeout'
        }
        /// <summary>
        /// Test the property 'ClientSessionMaxLifespan'
        /// </summary>
        [Fact]
        public void ClientSessionMaxLifespanTest()
        {
            // TODO unit test for the property 'ClientSessionMaxLifespan'
        }
        /// <summary>
        /// Test the property 'Clients'
        /// </summary>
        [Fact]
        public void ClientsTest()
        {
            // TODO unit test for the property 'Clients'
        }
        /// <summary>
        /// Test the property 'Components'
        /// </summary>
        [Fact]
        public void ComponentsTest()
        {
            // TODO unit test for the property 'Components'
        }
        /// <summary>
        /// Test the property 'DefaultDefaultClientScopes'
        /// </summary>
        [Fact]
        public void DefaultDefaultClientScopesTest()
        {
            // TODO unit test for the property 'DefaultDefaultClientScopes'
        }
        /// <summary>
        /// Test the property 'DefaultGroups'
        /// </summary>
        [Fact]
        public void DefaultGroupsTest()
        {
            // TODO unit test for the property 'DefaultGroups'
        }
        /// <summary>
        /// Test the property 'DefaultLocale'
        /// </summary>
        [Fact]
        public void DefaultLocaleTest()
        {
            // TODO unit test for the property 'DefaultLocale'
        }
        /// <summary>
        /// Test the property 'DefaultOptionalClientScopes'
        /// </summary>
        [Fact]
        public void DefaultOptionalClientScopesTest()
        {
            // TODO unit test for the property 'DefaultOptionalClientScopes'
        }
        /// <summary>
        /// Test the property 'DefaultRole'
        /// </summary>
        [Fact]
        public void DefaultRoleTest()
        {
            // TODO unit test for the property 'DefaultRole'
        }
        /// <summary>
        /// Test the property 'DefaultSignatureAlgorithm'
        /// </summary>
        [Fact]
        public void DefaultSignatureAlgorithmTest()
        {
            // TODO unit test for the property 'DefaultSignatureAlgorithm'
        }
        /// <summary>
        /// Test the property 'DirectGrantFlow'
        /// </summary>
        [Fact]
        public void DirectGrantFlowTest()
        {
            // TODO unit test for the property 'DirectGrantFlow'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'DisplayNameHtml'
        /// </summary>
        [Fact]
        public void DisplayNameHtmlTest()
        {
            // TODO unit test for the property 'DisplayNameHtml'
        }
        /// <summary>
        /// Test the property 'DockerAuthenticationFlow'
        /// </summary>
        [Fact]
        public void DockerAuthenticationFlowTest()
        {
            // TODO unit test for the property 'DockerAuthenticationFlow'
        }
        /// <summary>
        /// Test the property 'DuplicateEmailsAllowed'
        /// </summary>
        [Fact]
        public void DuplicateEmailsAllowedTest()
        {
            // TODO unit test for the property 'DuplicateEmailsAllowed'
        }
        /// <summary>
        /// Test the property 'EditUsernameAllowed'
        /// </summary>
        [Fact]
        public void EditUsernameAllowedTest()
        {
            // TODO unit test for the property 'EditUsernameAllowed'
        }
        /// <summary>
        /// Test the property 'EmailTheme'
        /// </summary>
        [Fact]
        public void EmailThemeTest()
        {
            // TODO unit test for the property 'EmailTheme'
        }
        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'EnabledEventTypes'
        /// </summary>
        [Fact]
        public void EnabledEventTypesTest()
        {
            // TODO unit test for the property 'EnabledEventTypes'
        }
        /// <summary>
        /// Test the property 'EventsEnabled'
        /// </summary>
        [Fact]
        public void EventsEnabledTest()
        {
            // TODO unit test for the property 'EventsEnabled'
        }
        /// <summary>
        /// Test the property 'EventsExpiration'
        /// </summary>
        [Fact]
        public void EventsExpirationTest()
        {
            // TODO unit test for the property 'EventsExpiration'
        }
        /// <summary>
        /// Test the property 'EventsListeners'
        /// </summary>
        [Fact]
        public void EventsListenersTest()
        {
            // TODO unit test for the property 'EventsListeners'
        }
        /// <summary>
        /// Test the property 'FailureFactor'
        /// </summary>
        [Fact]
        public void FailureFactorTest()
        {
            // TODO unit test for the property 'FailureFactor'
        }
        /// <summary>
        /// Test the property 'FederatedUsers'
        /// </summary>
        [Fact]
        public void FederatedUsersTest()
        {
            // TODO unit test for the property 'FederatedUsers'
        }
        /// <summary>
        /// Test the property 'Groups'
        /// </summary>
        [Fact]
        public void GroupsTest()
        {
            // TODO unit test for the property 'Groups'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'IdentityProviderMappers'
        /// </summary>
        [Fact]
        public void IdentityProviderMappersTest()
        {
            // TODO unit test for the property 'IdentityProviderMappers'
        }
        /// <summary>
        /// Test the property 'IdentityProviders'
        /// </summary>
        [Fact]
        public void IdentityProvidersTest()
        {
            // TODO unit test for the property 'IdentityProviders'
        }
        /// <summary>
        /// Test the property 'InternationalizationEnabled'
        /// </summary>
        [Fact]
        public void InternationalizationEnabledTest()
        {
            // TODO unit test for the property 'InternationalizationEnabled'
        }
        /// <summary>
        /// Test the property 'KeycloakVersion'
        /// </summary>
        [Fact]
        public void KeycloakVersionTest()
        {
            // TODO unit test for the property 'KeycloakVersion'
        }
        /// <summary>
        /// Test the property 'LoginTheme'
        /// </summary>
        [Fact]
        public void LoginThemeTest()
        {
            // TODO unit test for the property 'LoginTheme'
        }
        /// <summary>
        /// Test the property 'LoginWithEmailAllowed'
        /// </summary>
        [Fact]
        public void LoginWithEmailAllowedTest()
        {
            // TODO unit test for the property 'LoginWithEmailAllowed'
        }
        /// <summary>
        /// Test the property 'MaxDeltaTimeSeconds'
        /// </summary>
        [Fact]
        public void MaxDeltaTimeSecondsTest()
        {
            // TODO unit test for the property 'MaxDeltaTimeSeconds'
        }
        /// <summary>
        /// Test the property 'MaxFailureWaitSeconds'
        /// </summary>
        [Fact]
        public void MaxFailureWaitSecondsTest()
        {
            // TODO unit test for the property 'MaxFailureWaitSeconds'
        }
        /// <summary>
        /// Test the property 'MinimumQuickLoginWaitSeconds'
        /// </summary>
        [Fact]
        public void MinimumQuickLoginWaitSecondsTest()
        {
            // TODO unit test for the property 'MinimumQuickLoginWaitSeconds'
        }
        /// <summary>
        /// Test the property 'NotBefore'
        /// </summary>
        [Fact]
        public void NotBeforeTest()
        {
            // TODO unit test for the property 'NotBefore'
        }
        /// <summary>
        /// Test the property 'OAuth2DeviceCodeLifespan'
        /// </summary>
        [Fact]
        public void OAuth2DeviceCodeLifespanTest()
        {
            // TODO unit test for the property 'OAuth2DeviceCodeLifespan'
        }
        /// <summary>
        /// Test the property 'OAuth2DevicePollingInterval'
        /// </summary>
        [Fact]
        public void OAuth2DevicePollingIntervalTest()
        {
            // TODO unit test for the property 'OAuth2DevicePollingInterval'
        }
        /// <summary>
        /// Test the property 'Oauth2DeviceCodeLifespan'
        /// </summary>
        [Fact]
        public void Oauth2DeviceCodeLifespanTest()
        {
            // TODO unit test for the property 'Oauth2DeviceCodeLifespan'
        }
        /// <summary>
        /// Test the property 'Oauth2DevicePollingInterval'
        /// </summary>
        [Fact]
        public void Oauth2DevicePollingIntervalTest()
        {
            // TODO unit test for the property 'Oauth2DevicePollingInterval'
        }
        /// <summary>
        /// Test the property 'OfflineSessionIdleTimeout'
        /// </summary>
        [Fact]
        public void OfflineSessionIdleTimeoutTest()
        {
            // TODO unit test for the property 'OfflineSessionIdleTimeout'
        }
        /// <summary>
        /// Test the property 'OfflineSessionMaxLifespan'
        /// </summary>
        [Fact]
        public void OfflineSessionMaxLifespanTest()
        {
            // TODO unit test for the property 'OfflineSessionMaxLifespan'
        }
        /// <summary>
        /// Test the property 'OfflineSessionMaxLifespanEnabled'
        /// </summary>
        [Fact]
        public void OfflineSessionMaxLifespanEnabledTest()
        {
            // TODO unit test for the property 'OfflineSessionMaxLifespanEnabled'
        }
        /// <summary>
        /// Test the property 'OtpPolicyAlgorithm'
        /// </summary>
        [Fact]
        public void OtpPolicyAlgorithmTest()
        {
            // TODO unit test for the property 'OtpPolicyAlgorithm'
        }
        /// <summary>
        /// Test the property 'OtpPolicyDigits'
        /// </summary>
        [Fact]
        public void OtpPolicyDigitsTest()
        {
            // TODO unit test for the property 'OtpPolicyDigits'
        }
        /// <summary>
        /// Test the property 'OtpPolicyInitialCounter'
        /// </summary>
        [Fact]
        public void OtpPolicyInitialCounterTest()
        {
            // TODO unit test for the property 'OtpPolicyInitialCounter'
        }
        /// <summary>
        /// Test the property 'OtpPolicyLookAheadWindow'
        /// </summary>
        [Fact]
        public void OtpPolicyLookAheadWindowTest()
        {
            // TODO unit test for the property 'OtpPolicyLookAheadWindow'
        }
        /// <summary>
        /// Test the property 'OtpPolicyPeriod'
        /// </summary>
        [Fact]
        public void OtpPolicyPeriodTest()
        {
            // TODO unit test for the property 'OtpPolicyPeriod'
        }
        /// <summary>
        /// Test the property 'OtpPolicyType'
        /// </summary>
        [Fact]
        public void OtpPolicyTypeTest()
        {
            // TODO unit test for the property 'OtpPolicyType'
        }
        /// <summary>
        /// Test the property 'OtpSupportedApplications'
        /// </summary>
        [Fact]
        public void OtpSupportedApplicationsTest()
        {
            // TODO unit test for the property 'OtpSupportedApplications'
        }
        /// <summary>
        /// Test the property 'PasswordPolicy'
        /// </summary>
        [Fact]
        public void PasswordPolicyTest()
        {
            // TODO unit test for the property 'PasswordPolicy'
        }
        /// <summary>
        /// Test the property 'PermanentLockout'
        /// </summary>
        [Fact]
        public void PermanentLockoutTest()
        {
            // TODO unit test for the property 'PermanentLockout'
        }
        /// <summary>
        /// Test the property 'ProtocolMappers'
        /// </summary>
        [Fact]
        public void ProtocolMappersTest()
        {
            // TODO unit test for the property 'ProtocolMappers'
        }
        /// <summary>
        /// Test the property 'QuickLoginCheckMilliSeconds'
        /// </summary>
        [Fact]
        public void QuickLoginCheckMilliSecondsTest()
        {
            // TODO unit test for the property 'QuickLoginCheckMilliSeconds'
        }
        /// <summary>
        /// Test the property 'Realm'
        /// </summary>
        [Fact]
        public void RealmTest()
        {
            // TODO unit test for the property 'Realm'
        }
        /// <summary>
        /// Test the property 'RefreshTokenMaxReuse'
        /// </summary>
        [Fact]
        public void RefreshTokenMaxReuseTest()
        {
            // TODO unit test for the property 'RefreshTokenMaxReuse'
        }
        /// <summary>
        /// Test the property 'RegistrationAllowed'
        /// </summary>
        [Fact]
        public void RegistrationAllowedTest()
        {
            // TODO unit test for the property 'RegistrationAllowed'
        }
        /// <summary>
        /// Test the property 'RegistrationEmailAsUsername'
        /// </summary>
        [Fact]
        public void RegistrationEmailAsUsernameTest()
        {
            // TODO unit test for the property 'RegistrationEmailAsUsername'
        }
        /// <summary>
        /// Test the property 'RegistrationFlow'
        /// </summary>
        [Fact]
        public void RegistrationFlowTest()
        {
            // TODO unit test for the property 'RegistrationFlow'
        }
        /// <summary>
        /// Test the property 'RememberMe'
        /// </summary>
        [Fact]
        public void RememberMeTest()
        {
            // TODO unit test for the property 'RememberMe'
        }
        /// <summary>
        /// Test the property 'RequiredActions'
        /// </summary>
        [Fact]
        public void RequiredActionsTest()
        {
            // TODO unit test for the property 'RequiredActions'
        }
        /// <summary>
        /// Test the property 'ResetCredentialsFlow'
        /// </summary>
        [Fact]
        public void ResetCredentialsFlowTest()
        {
            // TODO unit test for the property 'ResetCredentialsFlow'
        }
        /// <summary>
        /// Test the property 'ResetPasswordAllowed'
        /// </summary>
        [Fact]
        public void ResetPasswordAllowedTest()
        {
            // TODO unit test for the property 'ResetPasswordAllowed'
        }
        /// <summary>
        /// Test the property 'RevokeRefreshToken'
        /// </summary>
        [Fact]
        public void RevokeRefreshTokenTest()
        {
            // TODO unit test for the property 'RevokeRefreshToken'
        }
        /// <summary>
        /// Test the property 'Roles'
        /// </summary>
        [Fact]
        public void RolesTest()
        {
            // TODO unit test for the property 'Roles'
        }
        /// <summary>
        /// Test the property 'ScopeMappings'
        /// </summary>
        [Fact]
        public void ScopeMappingsTest()
        {
            // TODO unit test for the property 'ScopeMappings'
        }
        /// <summary>
        /// Test the property 'SmtpServer'
        /// </summary>
        [Fact]
        public void SmtpServerTest()
        {
            // TODO unit test for the property 'SmtpServer'
        }
        /// <summary>
        /// Test the property 'SslRequired'
        /// </summary>
        [Fact]
        public void SslRequiredTest()
        {
            // TODO unit test for the property 'SslRequired'
        }
        /// <summary>
        /// Test the property 'SsoSessionIdleTimeout'
        /// </summary>
        [Fact]
        public void SsoSessionIdleTimeoutTest()
        {
            // TODO unit test for the property 'SsoSessionIdleTimeout'
        }
        /// <summary>
        /// Test the property 'SsoSessionIdleTimeoutRememberMe'
        /// </summary>
        [Fact]
        public void SsoSessionIdleTimeoutRememberMeTest()
        {
            // TODO unit test for the property 'SsoSessionIdleTimeoutRememberMe'
        }
        /// <summary>
        /// Test the property 'SsoSessionMaxLifespan'
        /// </summary>
        [Fact]
        public void SsoSessionMaxLifespanTest()
        {
            // TODO unit test for the property 'SsoSessionMaxLifespan'
        }
        /// <summary>
        /// Test the property 'SsoSessionMaxLifespanRememberMe'
        /// </summary>
        [Fact]
        public void SsoSessionMaxLifespanRememberMeTest()
        {
            // TODO unit test for the property 'SsoSessionMaxLifespanRememberMe'
        }
        /// <summary>
        /// Test the property 'SupportedLocales'
        /// </summary>
        [Fact]
        public void SupportedLocalesTest()
        {
            // TODO unit test for the property 'SupportedLocales'
        }
        /// <summary>
        /// Test the property 'UserFederationMappers'
        /// </summary>
        [Fact]
        public void UserFederationMappersTest()
        {
            // TODO unit test for the property 'UserFederationMappers'
        }
        /// <summary>
        /// Test the property 'UserFederationProviders'
        /// </summary>
        [Fact]
        public void UserFederationProvidersTest()
        {
            // TODO unit test for the property 'UserFederationProviders'
        }
        /// <summary>
        /// Test the property 'UserManagedAccessAllowed'
        /// </summary>
        [Fact]
        public void UserManagedAccessAllowedTest()
        {
            // TODO unit test for the property 'UserManagedAccessAllowed'
        }
        /// <summary>
        /// Test the property 'Users'
        /// </summary>
        [Fact]
        public void UsersTest()
        {
            // TODO unit test for the property 'Users'
        }
        /// <summary>
        /// Test the property 'VerifyEmail'
        /// </summary>
        [Fact]
        public void VerifyEmailTest()
        {
            // TODO unit test for the property 'VerifyEmail'
        }
        /// <summary>
        /// Test the property 'WaitIncrementSeconds'
        /// </summary>
        [Fact]
        public void WaitIncrementSecondsTest()
        {
            // TODO unit test for the property 'WaitIncrementSeconds'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyAcceptableAaguids'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyAcceptableAaguidsTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyAcceptableAaguids'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyAttestationConveyancePreference'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyAttestationConveyancePreferenceTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyAttestationConveyancePreference'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyAuthenticatorAttachment'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyAuthenticatorAttachmentTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyAuthenticatorAttachment'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyAvoidSameAuthenticatorRegister'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyAvoidSameAuthenticatorRegisterTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyAvoidSameAuthenticatorRegister'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyCreateTimeout'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyCreateTimeoutTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyCreateTimeout'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessAcceptableAaguids'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessAcceptableAaguidsTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessAcceptableAaguids'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessAttestationConveyancePreference'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessAttestationConveyancePreferenceTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessAttestationConveyancePreference'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessAuthenticatorAttachment'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessAuthenticatorAttachmentTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessAuthenticatorAttachment'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegisterTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessCreateTimeout'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessCreateTimeoutTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessCreateTimeout'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessRequireResidentKey'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessRequireResidentKeyTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessRequireResidentKey'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessRpEntityName'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessRpEntityNameTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessRpEntityName'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessRpId'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessRpIdTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessRpId'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessSignatureAlgorithms'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessSignatureAlgorithmsTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessSignatureAlgorithms'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyPasswordlessUserVerificationRequirement'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyPasswordlessUserVerificationRequirementTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyPasswordlessUserVerificationRequirement'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyRequireResidentKey'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyRequireResidentKeyTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyRequireResidentKey'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyRpEntityName'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyRpEntityNameTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyRpEntityName'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyRpId'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyRpIdTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyRpId'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicySignatureAlgorithms'
        /// </summary>
        [Fact]
        public void WebAuthnPolicySignatureAlgorithmsTest()
        {
            // TODO unit test for the property 'WebAuthnPolicySignatureAlgorithms'
        }
        /// <summary>
        /// Test the property 'WebAuthnPolicyUserVerificationRequirement'
        /// </summary>
        [Fact]
        public void WebAuthnPolicyUserVerificationRequirementTest()
        {
            // TODO unit test for the property 'WebAuthnPolicyUserVerificationRequirement'
        }

    }

}
