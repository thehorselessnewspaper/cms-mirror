/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Horseless.Keycloak.Admin.Rest.Api;
using Horseless.Keycloak.Admin.Rest.Model;
using Horseless.Keycloak.Admin.Rest.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Horseless.Keycloak.Admin.Rest.Test.Model
{
    /// <summary>
    ///  Class for testing ComponentRepresentation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ComponentRepresentationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ComponentRepresentation
        //private ComponentRepresentation instance;

        public ComponentRepresentationTests()
        {
            // TODO uncomment below to create an instance of ComponentRepresentation
            //instance = new ComponentRepresentation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ComponentRepresentation
        /// </summary>
        [Fact]
        public void ComponentRepresentationInstanceTest()
        {
            // TODO uncomment below to test "IsType" ComponentRepresentation
            //Assert.IsType<ComponentRepresentation>(instance);
        }


        /// <summary>
        /// Test the property 'Config'
        /// </summary>
        [Fact]
        public void ConfigTest()
        {
            // TODO unit test for the property 'Config'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Fact]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Fact]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'ProviderType'
        /// </summary>
        [Fact]
        public void ProviderTypeTest()
        {
            // TODO unit test for the property 'ProviderType'
        }
        /// <summary>
        /// Test the property 'SubType'
        /// </summary>
        [Fact]
        public void SubTypeTest()
        {
            // TODO unit test for the property 'SubType'
        }

    }

}
