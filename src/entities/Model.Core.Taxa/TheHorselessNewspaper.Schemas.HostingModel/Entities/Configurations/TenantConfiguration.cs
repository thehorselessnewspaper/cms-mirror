// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using TheHorselessNewspaper.Schemas.HostingModel.Entities;

namespace TheHorselessNewspaper.Schemas.HostingModel.Entities.Configurations
{
    public partial class TenantConfiguration : IEntityTypeConfiguration<Tenant>
    {
        public void Configure(EntityTypeBuilder<Tenant> entity)
        {
            entity.ToTable("Tenants", "HostingModel");

            entity.HasIndex(e => e.KeyCloakConfigurationId, "IX_FK_KeyCloakConfigurationTenant");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");

            entity.Property(e => e.ObjectId).IsRequired();

            entity.HasOne(d => d.KeyCloakConfiguration)
                .WithMany(p => p.Tenants)
                .HasForeignKey(d => d.KeyCloakConfigurationId)
                .HasConstraintName("FK_KeyCloakConfigurationTenant");

            entity.HasMany(d => d.AvailableNugetPackages)
                .WithMany(p => p.TenantDeployments)
                .UsingEntity<Dictionary<string, object>>(
                    "TenantNugetPackage",
                    l => l.HasOne<NugetPackage>().WithMany().HasForeignKey("AvailableNugetPackages_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TenantNugetPackage_NugetPackage"),
                    r => r.HasOne<Tenant>().WithMany().HasForeignKey("TenantDeployments_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TenantNugetPackage_Tenant"),
                    j =>
                    {
                        j.HasKey("TenantDeployments_Id", "AvailableNugetPackages_Id");

                        j.ToTable("TenantNugetPackage", "HostingModel");

                        j.HasIndex(new[] { "AvailableNugetPackages_Id" }, "IX_FK_TenantNugetPackage_NugetPackage");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Tenant> entity);
    }
}
