// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using TheHorselessNewspaper.Schemas.HostingModel.Entities;

namespace TheHorselessNewspaper.Schemas.HostingModel.Entities.Configurations
{
    public partial class HostConfiguration : IEntityTypeConfiguration<Host>
    {
        public void Configure(EntityTypeBuilder<Host> entity)
        {
            entity.ToTable("Hosts", "HostingModel");

            entity.HasIndex(e => e.RoutingDiscriminatorId, "IX_FK_RoutingDiscriminatorHost");

            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.RoutingDiscriminator)
                .WithMany(p => p.Hosts)
                .HasForeignKey(d => d.RoutingDiscriminatorId)
                .HasConstraintName("FK_RoutingDiscriminatorHost");

            entity.HasMany(d => d.WWWRootAssetLocations)
                .WithMany(p => p.HostWWWRootAssetLocations)
                .UsingEntity<Dictionary<string, object>>(
                    "HostFilesystemAssetLocation",
                    l => l.HasOne<FilesystemAssetLocation>().WithMany().HasForeignKey("WWWRootAssetLocations_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_HostFilesystemAssetLocation_FilesystemAssetLocation"),
                    r => r.HasOne<Host>().WithMany().HasForeignKey("HostWWWRootAssetLocations_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_HostFilesystemAssetLocation_Host"),
                    j =>
                    {
                        j.HasKey("HostWWWRootAssetLocations_Id", "WWWRootAssetLocations_Id");

                        j.ToTable("HostFilesystemAssetLocation", "HostingModel");

                        j.HasIndex(new[] { "WWWRootAssetLocations_Id" }, "IX_FK_HostFilesystemAssetLocation_FilesystemAssetLocation");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Host> entity);
    }
}
