// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using TheHorselessNewspaper.Schemas.ContentModel.ContentEntities;

#nullable disable

namespace TheHorselessNewspaper.Schemas.ContentModel.ContentEntities.Configurations
{
    public partial class TaxonConfiguration : IEntityTypeConfiguration<Taxon>
    {
        public void Configure(EntityTypeBuilder<Taxon> entity)
        {
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasMany(d => d.AntecedentTaxons)
                .WithMany(p => p.DerivativeTaxons)
                .UsingEntity<Dictionary<string, object>>(
                    "TaxonHirearchy",
                    l => l.HasOne<Taxon>().WithMany().HasForeignKey("AntecedentTaxons_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TaxonTaxon_Taxon"),
                    r => r.HasOne<Taxon>().WithMany().HasForeignKey("DerivativeTaxons_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TaxonTaxon_Taxon1"),
                    j =>
                    {
                        j.HasKey("AntecedentTaxons_Id", "DerivativeTaxons_Id");

                        j.ToTable("TaxonHirearchy");

                        j.HasIndex(new[] { "DerivativeTaxons_Id" }, "IX_FK_TaxonTaxon_Taxon1");
                    });

            entity.HasMany(d => d.DerivativeTaxons)
                .WithMany(p => p.AntecedentTaxons)
                .UsingEntity<Dictionary<string, object>>(
                    "TaxonHirearchy",
                    l => l.HasOne<Taxon>().WithMany().HasForeignKey("DerivativeTaxons_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TaxonTaxon_Taxon1"),
                    r => r.HasOne<Taxon>().WithMany().HasForeignKey("AntecedentTaxons_Id").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_TaxonTaxon_Taxon"),
                    j =>
                    {
                        j.HasKey("AntecedentTaxons_Id", "DerivativeTaxons_Id");

                        j.ToTable("TaxonHirearchy");

                        j.HasIndex(new[] { "DerivativeTaxons_Id" }, "IX_FK_TaxonTaxon_Taxon1");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Taxon> entity);
    }
}
