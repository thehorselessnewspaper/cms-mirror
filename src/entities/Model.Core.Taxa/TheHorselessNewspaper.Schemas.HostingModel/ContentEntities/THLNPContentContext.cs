// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System;
using System.Collections.Generic;
using TheHorselessNewspaper.Schemas.ContentModel.ContentEntities.Configurations;
#nullable enable

namespace TheHorselessNewspaper.Schemas.ContentModel.ContentEntities
{
    internal partial class THLNPContentContext : DbContext
    {
        public THLNPContentContext()
        {
        }

        public THLNPContentContext(DbContextOptions<THLNPContentContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccessControlEntry> AccessControlEntries { get; set; } = null!;
        public virtual DbSet<ContentCollection> ContentCollections { get; set; } = null!;
        public virtual DbSet<FilesystemAsset> FilesystemAssets { get; set; } = null!;
        public virtual DbSet<Holonym> Holonyms { get; set; } = null!;
        public virtual DbSet<HorselessContent> HorselessContents { get; set; } = null!;
        public virtual DbSet<HorselessSession> HorselessSessions { get; set; } = null!;
        public virtual DbSet<HorselessView> HorselessViews { get; set; } = null!;
        public virtual DbSet<JSONAsset> JSONAssets { get; set; } = null!;
        public virtual DbSet<MIMEType> MIMETypes { get; set; } = null!;
        public virtual DbSet<Meronym> Meronyms { get; set; } = null!;
        public virtual DbSet<NavigationMenu> NavigationMenus { get; set; } = null!;
        public virtual DbSet<NavigationMenuItem> NavigationMenuItems { get; set; } = null!;
        public virtual DbSet<NugetPackage> NugetPackages { get; set; } = null!;
        public virtual DbSet<Placeholder> Placeholders { get; set; } = null!;
        public virtual DbSet<Principal> Principals { get; set; } = null!;
        public virtual DbSet<Publication> Publications { get; set; } = null!;
        public virtual DbSet<Taxon> Taxons { get; set; } = null!;
        public virtual DbSet<Taxonomy> Taxonomies { get; set; } = null!;
        public virtual DbSet<Tenant> Tenants { get; set; } = null!;

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new Configurations.AccessControlEntryConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ContentCollectionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.FilesystemAssetConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.HolonymConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.HorselessContentConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.HorselessSessionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.HorselessViewConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.JSONAssetConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MIMETypeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MeronymConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.NavigationMenuConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.NavigationMenuItemConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.NugetPackageConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PlaceholderConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PrincipalConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PublicationConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TaxonConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TaxonomyConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TenantConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
