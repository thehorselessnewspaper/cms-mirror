{"ast":null,"code":"import { ContentEntitiesACEPermission, ContentEntitiesACEPermissionScope, ContentEntitiesACEPermissionType } from '@wizardcontrollerprerelease/horseless-contentapi-lib';\nimport { MatAccordion } from '@angular/material/expansion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/table\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/material/expansion\";\nimport * as i4 from \"../../../pipe/horseless-tags-pipes/stringCoercion.pipe\";\n\nfunction ContentAccessControlEntryTableComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2, \"DisplayName\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Scope\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Permission\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Permission Type\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ContentAccessControlEntryTableComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 5)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"stringCoercion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"stringCoercion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"stringCoercion\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const acl_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pSelectableRow\", acl_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(acl_r2.DisplayName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 5, acl_r2.Scope, ctx_r1.ACEPermissionScope));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 8, acl_r2.Permission, ctx_r1.ACEPermission));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 11, acl_r2.PermissionType, ctx_r1.ACEPermissionType));\n  }\n}\n\nexport let ContentAccessControlEntryTableComponent = /*#__PURE__*/(() => {\n  class ContentAccessControlEntryTableComponent {\n    constructor() {\n      this.accessControlEntries = new Array();\n      this.panelOpenState = false;\n      this.ACEPermissionType = ContentEntitiesACEPermissionType;\n      this.ACEPermission = ContentEntitiesACEPermission;\n      this.ACEPermissionScope = ContentEntitiesACEPermissionScope;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ContentAccessControlEntryTableComponent.ɵfac = function ContentAccessControlEntryTableComponent_Factory(t) {\n    return new (t || ContentAccessControlEntryTableComponent)();\n  };\n\n  ContentAccessControlEntryTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContentAccessControlEntryTableComponent,\n    selectors: [[\"lib-contentAccessControlEntry-table\"]],\n    viewQuery: function ContentAccessControlEntryTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatAccordion, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accordion = _t.first);\n      }\n    },\n    inputs: {\n      accessControlEntries: \"accessControlEntries\"\n    },\n    decls: 10,\n    vars: 5,\n    consts: [[\"multi\", \"\", 1, \"headers-align\"], [3, \"opened\", \"closed\"], [\"responsiveLayout\", \"scroll\", \"scrollHeight\", \"200px\", \"scrollHeight\", \"flex\", \"selectionMode\", \"single\", 3, \"value\", \"scrollable\", \"paginator\", \"rows\", \"selection\", \"selectionChange\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"pSelectableRow\"]],\n    template: function ContentAccessControlEntryTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-accordion\", 0)(1, \"mat-expansion-panel\", 1);\n        i0.ɵɵlistener(\"opened\", function ContentAccessControlEntryTableComponent_Template_mat_expansion_panel_opened_1_listener() {\n          return ctx.panelOpenState = true;\n        })(\"closed\", function ContentAccessControlEntryTableComponent_Template_mat_expansion_panel_closed_1_listener() {\n          return ctx.panelOpenState = false;\n        });\n        i0.ɵɵelementStart(2, \"mat-expansion-panel-header\")(3, \"mat-panel-title\");\n        i0.ɵɵtext(4, \" permissions \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-panel-description\");\n        i0.ɵɵtext(6, \" access control entry \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"p-table\", 2);\n        i0.ɵɵlistener(\"selectionChange\", function ContentAccessControlEntryTableComponent_Template_p_table_selectionChange_7_listener($event) {\n          return ctx.selectedItem = $event;\n        });\n        i0.ɵɵtemplate(8, ContentAccessControlEntryTableComponent_ng_template_8_Template, 9, 0, \"ng-template\", 3);\n        i0.ɵɵtemplate(9, ContentAccessControlEntryTableComponent_ng_template_9_Template, 12, 14, \"ng-template\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.accessControlEntries)(\"scrollable\", true)(\"paginator\", true)(\"rows\", 4)(\"selection\", ctx.selectedItem);\n      }\n    },\n    dependencies: [i1.Table, i2.PrimeTemplate, i1.SelectableRow, i3.MatAccordion, i3.MatExpansionPanel, i3.MatExpansionPanelHeader, i3.MatExpansionPanelTitle, i3.MatExpansionPanelDescription, i4.StringCoercionPipe],\n    styles: [\".action-buttons[_ngcontent-%COMP%]{padding-bottom:20px}.headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{flex-basis:0}.headers-align[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%]{justify-content:space-between;align-items:center}.headers-align[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] + .mat-form-field[_ngcontent-%COMP%]{margin-left:8px}\"]\n  });\n  return ContentAccessControlEntryTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}