version: '3.9'

# prototype the docker compose stack 
# required to boot the cms
# 
# some services also have nics on network=default
#
# assumes base http(s) url of localhost:portnumber

volumes:
  keycloak_postgres_data:
      driver: local
  prototype-content-db:
      driver: local
  critical-rabbitmq-volume:
      driver: local
  # gravitee.io api management dependencies
  data-elasticsearch:
  data-mongo:

services:
  keycloakpostgres:
    image: postgres
    #image: postgres:13.5
    hostname: keycloakpostgres.local
    container_name: keycloakpostgres
    volumes:
        - keycloak_postgres_data:/var/lib/postgresql/data
    environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    networks:
      - horselesswan
  keycloak.local:
      image: quay.io/keycloak/keycloak-x:latest  
      hostname: keycloak.local
      volumes:
        - ./config/keycloak/horseless-infrastructure-realm-export.json:/tmp/horselessrealm.json  
        - ./https/keycloak/servercert.pem:/etc/x509/https/tls.crt:z
        - ./https/keycloak/serverkey.pem:/etc/x509/https/tls.key:z 
        #- ./data:/opt/keycloak/data:z 
      command: start --auto-build --hostname=${KeycloakContainerHostName} \ 
               --https-certificate-file=/etc/x509/https/tls.crt \
               --https-certificate-key-file=/etc/x509/https/tls.key \
               --db=postgres \
               --db-url-host=keycloakpostgres.local \
               --db-url-database=keycloak \
               --db-username=keycloak \
               --db-password=password \ 
               --db-schema=public \
               --features-upload_scripts=enabled 
               # start-dev
      # environment configuration for keycloak-x (quarkus) as per https://blog.codecentric.de/en/2021/12/keycloak-keycloak-x/
      environment:
        KEYCLOAK_IMPORT: /tmp/horselessrealm.json -Dkeycloak.profile.feature.upload_scripts=enabled  
        DB_VENDOR: postgres
        DB_ADDR: keycloakpostgres.local
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: Pa55w0rd
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        JDBC_PARAMS: "ssl=false"

        # keycloak-x distribution variables
        # as per https://github.com/keycloak/keycloak-community/blob/main/design/keycloak.x/configuration.md
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
        db: postgres
        kc.db.url.host: keycloakpostgres.local
        kc.db.url.database: keycloak
        db.username: admin
        db.password: Pa55w0rd
        http-host: 0.0.0.0
      ports:
        - 8080:8080
        - 8443:8443
      depends_on:
        - keycloakpostgres
      networks:
        - horselesswan

  critical-rabbitmq:
    hostname: "critical-rabbitmq"
    image: rabbitmq:3-management
    container_name: critical-rabbitmq
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "25672:25672"
      - "15671:15671"
      - "15672:15672"
    volumes:
      - critical-rabbitmq-volume:/var/lib/rabbitmq
  
  # begin gravitee.io dependencies
  mongodb:
    image: mongo:${MONGODB_VERSION:-3.6}
    container_name: gio_apim_mongodb
    restart: always
    volumes:
      - data-mongo:/data/db
      - ./logs/apim-mongodb:/var/log/mongodb
    networks:
      - storage

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.7.0}
    container_name: gio_apim_elasticsearch
    restart: always
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
    networks:
      - storage

  gateway:
    image: graviteeio/apim-gateway:${APIM_VERSION:-3}
    container_name: gio_apim_gateway
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-gateway:/opt/graviteeio-gateway/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
    networks:
      - storage
      - frontend

  management_api:
    image: graviteeio/apim-management-api:${APIM_VERSION:-3}
    container_name: gio_apim_management_api
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-management-api:/opt/graviteeio-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
    networks:
      - storage
      - frontend

  management_ui:
    image: graviteeio/apim-management-ui:${APIM_VERSION:-3}
    container_name: gio_apim_management_ui
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
    volumes:
      - ./logs/apim-management-ui:/var/log/nginx
    networks:
      - frontend

  portal_ui:
    image: graviteeio/apim-portal-ui:${APIM_VERSION:-3}
    container_name: gio_apim_portal_ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
    volumes:
      - ./logs/apim-portal-ui:/var/log/nginx
    networks:
      - frontend
  # end gravitee.io dependencies

  content-db:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    hostname: contentdb.local
    volumes:
        - prototype-content-db:/var/opt/mssql
    environment:
        SA_PASSWORD: "Pa55w0rd"
        ACCEPT_EULA: "Y"
    depends_on:
        - keycloak.local
    networks:
        - horselesswan

  horselessnewspaper.local:
    image: "horselessnewspaper.local"
    hostname: horselessnewspaper.local
    ports:
      - 6000:6000
      - 6001:6001
    networks:
        - horselesswan
 

    dns:
      - ${LocalDNS1}
      - 8.8.8.8
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=https://+:6001;http://+:6000
      - Kestrel__Certificates__Default__Path=/https/servercert.pfx
      - Kestrel__Certificates__Default__Password=pa55word  
      - TenantFilesystemPath=assetroot
      - ConnectionStrings__HostingModelConnection=Data Source=contentdb.local;Database=THLNP_Hosting;Integrated Security=false;User ID=sa;Password=Pa55w0rd;
      - ConnectionStrings__ContentModelConnection=Data Source=contentdb.local;Database=THLNP_Content;Integrated Security=false;User ID=sa;Password=Pa55w0rd;
      - Keycloak__SignoutRedirectUrl=${KeycloakSignoutRedirectUrl}
      - Keycloak__Realm=${KeycloakRealm}
      - Keycloak__PostLogoutRedirectUri=${KeycloakPostLogoutRedirectUri}
      - Keycloak__OIDCLogoutUri=${KeycloakOIDCLogoutUri}
      - Keycloak__MetaData=${KeycloakMetaData}
      - Keycloak__Issuer=${KeycloakIssuer}
      - Keycloak__ClientSecret=${KeycloakClientSecret}
      - Keycloak__ClientId=${KeycloakClientId}
      - Keycloak__Authority=${KeycloakAuthority}
      - Keycloak__Audience=horseless-prototype
      - FeatureManagement__TenantAdminUI=false
      - FeatureManagement__ContentEditorUI=false
      - RestApiBaseUrl=${RestApiBaseUrl}  
      - OdataApiBaseUrl=${OdataApiBaseUrl}
    volumes:
       - ./https/:/https/
    depends_on:
      - content-db  
    build:
      context: ../
      dockerfile: HorselessNewspaper.Core.Web.Prototype/Dockerfile

networks: 
    horselesswan: 
        name: horselesswan 
    # gravitee.io dependencies
    frontend:
        name: frontend
    storage:
        name: storage        
